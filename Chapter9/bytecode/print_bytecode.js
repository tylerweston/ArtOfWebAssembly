function bytecode_test() {
    let x = 0;
    for (let i = 0; i < 100_000_000; i++) {
        x = i % 1000;
    }
    return 99;
}
bytecode_test();

// To view bytecode:
// node --print-bytecode --print-bytecode-filter=bytecode_test print_bytecode.js

// [generated bytecode for function: bytecode_test (0x01bd6c97fcc9 <SharedFunctionInfo bytecode_test>)]
// Parameter count 1
// Register count 2
// Frame size 16
//    40 S> 000003C8442C03A6 @    0 : 0b                LdaZero
//          000003C8442C03A7 @    1 : 26 fb             Star r0
//    61 S> 000003C8442C03A9 @    3 : 0b                LdaZero
//          000003C8442C03AA @    4 : 26 fa             Star r1
//    66 S> 000003C8442C03AC @    6 : 01 0c 00 e1 f5 05 LdaSmi.ExtraWide [100000000]
//    66 E> 000003C8442C03B2 @   12 : 69 fa 00          TestLessThan r1, [0]
//          000003C8442C03B5 @   15 : 9a 15             JumpIfFalse [21] (000003C8442C03CA @ 36)
//    97 S> 000003C8442C03B7 @   17 : 25 fa             Ldar r1
//   103 E> 000003C8442C03B9 @   19 : 00 44 e8 03 01 00 ModSmi.Wide [1000], [1]
//          000003C8442C03BF @   25 : 26 fb             Star r0
//    82 S> 000003C8442C03C1 @   27 : 25 fa             Ldar r1
//          000003C8442C03C3 @   29 : 4c 02             Inc [2]
//          000003C8442C03C5 @   31 : 26 fa             Star r1
//    48 E> 000003C8442C03C7 @   33 : 8a 1b 00          JumpLoop [27], [0] (000003C8442C03AC @ 6)
//   123 S> 000003C8442C03CA @   36 : 0c 63             LdaSmi [99]
//   133 S> 000003C8442C03CC @   38 : aa                Return
// Constant pool (size = 0)
// Handler Table (size = 0)
// Source Position Table (size = 24)
// 0x03c8442c03d1 <ByteArray[24]>